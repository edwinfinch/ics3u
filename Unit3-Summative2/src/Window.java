
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class Window extends javax.swing.JFrame {

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        giveupButton = new javax.swing.JButton();
        newgameButton = new javax.swing.JButton();
        guessInput = new javax.swing.JTextField();
        guessLabel = new javax.swing.JLabel();
        triesleftLabel = new javax.swing.JLabel();
        triesLeftValue = new javax.swing.JLabel();
        blackPegsLabel = new javax.swing.JLabel();
        blackPegsValue = new javax.swing.JLabel();
        whitePegsLabel = new javax.swing.JLabel();
        whitePegsValue = new javax.swing.JLabel();
        settingsButton = new javax.swing.JButton();
        triedLabel = new javax.swing.JLabel();
        triedValue = new javax.swing.JLabel();
        lastInputLabel = new javax.swing.JLabel();
        statsButton = new javax.swing.JButton();
        debugLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        allGuessesList = new javax.swing.JList();
        allGuessesButton = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        titleLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 48)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("MasterMind");

        giveupButton.setText("\"I give up!\"");
        giveupButton.setToolTipText("");
        giveupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giveupButtonActionPerformed(evt);
            }
        });

        newgameButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        newgameButton.setText("New Game");
        newgameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newgameButtonActionPerformed(evt);
            }
        });

        guessInput.setFont(new java.awt.Font("Shree Devanagari 714", 0, 14)); // NOI18N
        guessInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessInputActionPerformed(evt);
            }
        });

        guessLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 14)); // NOI18N
        guessLabel.setText("Guess:");

        triesleftLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 14)); // NOI18N
        triesleftLabel.setText("Tries left:");

        triesLeftValue.setFont(new java.awt.Font("Shree Devanagari 714", 1, 24)); // NOI18N
        triesLeftValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        triesLeftValue.setText("0");

        blackPegsLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 13)); // NOI18N
        blackPegsLabel.setText("Black Pegs:");

        blackPegsValue.setFont(new java.awt.Font("Shree Devanagari 714", 1, 24)); // NOI18N
        blackPegsValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        blackPegsValue.setText("0");

        whitePegsLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 13)); // NOI18N
        whitePegsLabel.setText("White Pegs:");

        whitePegsValue.setFont(new java.awt.Font("Shree Devanagari 714", 1, 24)); // NOI18N
        whitePegsValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        whitePegsValue.setText("0");

        settingsButton.setText("Settings");
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });

        triedLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 14)); // NOI18N
        triedLabel.setText("Tried:");

        triedValue.setFont(new java.awt.Font("Shree Devanagari 714", 1, 24)); // NOI18N
        triedValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        triedValue.setText("0");

        lastInputLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 14)); // NOI18N
        lastInputLabel.setText("Last input: ...");

        statsButton.setText("Stats");
        statsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsButtonActionPerformed(evt);
            }
        });

        debugLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 14)); // NOI18N
        debugLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        debugLabel.setText(" Please click \"New Game\".");

        allGuessesList.setBackground(new java.awt.Color(238, 238, 238));
        allGuessesList.setFont(new java.awt.Font("Shree Devanagari 714", 1, 14)); // NOI18N
        jScrollPane1.setViewportView(allGuessesList);

        allGuessesButton.setText("All Guesses");
        allGuessesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allGuessesButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jLabel1.setText("All Previous Guesses");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(debugLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastInputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(blackPegsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(blackPegsValue, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(whitePegsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(whitePegsValue, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(triesleftLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(triesLeftValue, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(triedLabel)
                        .addGap(18, 18, 18)
                        .addComponent(triedValue)
                        .addGap(66, 66, 66))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(guessLabel)
                        .addGap(1, 1, 1)
                        .addComponent(guessInput))))
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(210, 210, 210))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newgameButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(giveupButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(settingsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(statsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(allGuessesButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newgameButton)
                    .addComponent(giveupButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(debugLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastInputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guessInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guessLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(whitePegsValue, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(blackPegsValue, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(triesLeftValue, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(triedLabel)
                            .addComponent(triedValue)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(whitePegsLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(triesleftLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(blackPegsLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(settingsButton)
                    .addComponent(allGuessesButton)
                    .addComponent(statsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    static Stats pStats;
    static Settings pSettings;
    MasterMind masterMind;
    String[] guessListCompiled;
    
    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        loadSettings();
        
        SettingsWindow settingsWindow = new SettingsWindow();
        settingsWindow.setVisible(true);
        settingsWindow.setSettings(pSettings);
    }//GEN-LAST:event_settingsButtonActionPerformed

    private void statsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsButtonActionPerformed
        loadStats();
        
        StatsWindow statsWindow = new StatsWindow();
        statsWindow.setVisible(true);
        statsWindow.setStats(pStats);
    }//GEN-LAST:event_statsButtonActionPerformed

    private void debug(String string){
        debugLabel.setText(string);
    }
    
    private void newGame(){
        loadSettings();
        loadStats();
        masterMind = new MasterMind(pSettings);
        masterMind.newGame(pStats);
        debug("New game created.");
        settingsButton.setEnabled(false);
        if(pSettings.definePegs == 0){
            allGuessesButton.setEnabled(true);
        }
        else{
            allGuessesButton.setEnabled(false);
        }
        thisWindow.setSize(560, 300);
    }
    
    private void newgameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newgameButtonActionPerformed
        newGame();
    }//GEN-LAST:event_newgameButtonActionPerformed

    private void gameOver(boolean lose, PegData pegs){
        if(lose){
            pegs.amountOfBlacks = 0;
            debug("You lose! " + pegs.getPegsString(masterMind.getGuess()));
            masterMind.currentGameStats.totalLoses++;
        }
        else{
            pegs.amountOfBlacks = pSettings.amountOfColours;
            debug("You win! " + pegs.getPegsString(masterMind.getGuess()));
            masterMind.currentGameStats.totalWins++;
        }
        masterMind.gameActive = false;
        blackPegsValue.setText("" + pegs.amountOfBlacks);
        whitePegsValue.setText("0");
        pStats = pStats.addStats(masterMind.currentGameStats);
        writeStats(pStats);
        settingsButton.setEnabled(true);
    }
    
    private void throwError(String errorText){
        JOptionPane.showMessageDialog(null, errorText, "Error!", JOptionPane.ERROR_MESSAGE);
    }
    
    private void updateGuessList(){
        guessListCompiled = new String[masterMind.listData.size()];
        for(int i = 0; i < masterMind.listData.size(); i++){
            PegData current = masterMind.listData.get(i);
            String whitesString = current.getWhites(current, current.coloursInput), 
                    blacksString = current.getBlacks(current, current.coloursInput);
            guessListCompiled[i] = "Guess " + (i+1) + ": " + current.guess + " " + blacksString  + whitesString;
        }
        allGuessesList.setListData(guessListCompiled);
    }
    
    private void guessInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessInputActionPerformed
        if(masterMind == null){
            newGame(); 
        }
        lastInputLabel.setText("Last guess: " + guessInput.getText());
        PegData pegs = masterMind.guess(guessInput.getText());
        if(!pegs.errorMessage.equals("No error")){
            throwError("There was an error, probably with your input. For next time: \n 1. Make sure you have an amount of colours"
                    + " inputted as much as your setting. \n 2. Make sure all colours are valid and are in English \n \n" +
                    "Your amount of colours is set to " + pSettings.amountOfColours + "\n Valid colour inputs are: " + masterMind.coloursToString());
        }
        if(1337 != Math.abs(pegs.amountOfBlacks)){
            masterMind.currentGameStats.totalBlack += pegs.amountOfBlacks;
            masterMind.currentGameStats.totalWhite += pegs.amountOfWhites;
        }
        if(pegs.amountOfBlacks == 1337){
            gameOver(false, pegs);
            return;
        }
        else if(pegs.amountOfBlacks == -1337){
            gameOver(true, pegs);
            return;
        }
        
        if(pSettings.definePegs == 0){
            debug(pegs.getPegsString(masterMind.getGuess()));
        }
        else{
            debug("Possible colours: " + masterMind.coloursToString());
        }
        
        blackPegsValue.setText("" + pegs.amountOfBlacks);
        whitePegsValue.setText("" + pegs.amountOfWhites);
        triedValue.setText("" + masterMind.currentGameStats.totalGuesses);
        triesLeftValue.setText("" + (masterMind.getAmountOfGuesses()-masterMind.currentGameStats.totalGuesses));
        
        updateGuessList();
    }//GEN-LAST:event_guessInputActionPerformed

    private void giveupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giveupButtonActionPerformed
        gameOver(true, masterMind.guess(guessInput.getText()));
        int[] pegs = {1337, 1337};
        debug("Correct string: " + masterMind.getString(pegs));
    }//GEN-LAST:event_giveupButtonActionPerformed

    private void allGuessesButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if(!allGuessesButton.isSelected()){
            thisWindow.setSize(560, 300);
        }
        else{
            thisWindow.setSize(560, 600);
        }
    }

    private void writeStats(Stats stats){
        DataManager master = new DataManager("stats.txt");
        master.setupWriter();
        master.writeStats(stats);
    }
    
    private void loadSettings(){
        DataManager manager = new DataManager("settings.txt");
        manager.setupReader();
        pSettings = manager.getSettings();
        System.out.println("Settings loaded");
    }
    
    private void loadStats(){
        DataManager manager = new DataManager("stats.txt");
        manager.setupReader();
        pStats = manager.getStats();
        System.out.println("Stats loaded");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                thisWindow = new Window();
                thisWindow.setVisible(true);
                thisWindow.setSize(560, 300);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JToggleButton allGuessesButton;
    private static Window thisWindow;
    private javax.swing.JList allGuessesList;
    private javax.swing.JLabel blackPegsLabel;
    private javax.swing.JLabel blackPegsValue;
    private javax.swing.JLabel debugLabel;
    private javax.swing.JButton giveupButton;
    private javax.swing.JTextField guessInput;
    private javax.swing.JLabel guessLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastInputLabel;
    private javax.swing.JButton newgameButton;
    private javax.swing.JButton settingsButton;
    private javax.swing.JButton statsButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel triedLabel;
    private javax.swing.JLabel triedValue;
    private javax.swing.JLabel triesLeftValue;
    private javax.swing.JLabel triesleftLabel;
    private javax.swing.JLabel whitePegsLabel;
    private javax.swing.JLabel whitePegsValue;
    // End of variables declaration//GEN-END:variables
}
