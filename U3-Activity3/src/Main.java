
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author edwinfinch
 */
public class Main extends javax.swing.JPanel {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        metricSelection = new javax.swing.JComboBox();
        stupidUnitSelection = new javax.swing.JComboBox();
        toLabel = new javax.swing.JLabel();
        mainInput = new javax.swing.JTextField();
        outputLabel = new javax.swing.JLabel();

        metricSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Centimeters", "Meters", "Kilometers", "Inches", "Feet", "Yards", "Miles" }));

        stupidUnitSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Inches", "Feet", "Yards", "Miles", "Centimeters", "Meters", "Kilometers" }));
        stupidUnitSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stupidUnitSelectionActionPerformed(evt);
            }
        });

        toLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toLabel.setText("to");

        mainInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainInputActionPerformed(evt);
            }
        });

        outputLabel.setFont(new java.awt.Font("Bangla MN", 0, 14)); // NOI18N
        outputLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        outputLabel.setText("Press enter to submit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainInput, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(stupidUnitSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(toLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(metricSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(outputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(metricSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stupidUnitSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputLabel))
        );
    }// </editor-fold>//GEN-END:initComponents

    int unit2 = 0, unit1 = 0;
    double inputValue = 0;
    
    private void throwError(String errorText){
        JOptionPane.showMessageDialog(null, errorText, "Error!", JOptionPane.ERROR_MESSAGE);
    }
    
    private void refresh(){
        double preFinal = 0.00, finalOutput = 0.00;
        //convert the silly unit (imperial) to centimeters for the base
        switch(unit1){
            case 0:
                preFinal = inputValue*2.54;
                break;
            case 1:
                preFinal = inputValue*30.48;
                break;
            case 2:
                preFinal = inputValue*91.44;
                break;
            case 3:
                preFinal = inputValue*160934;
                break;
            case 4:
                preFinal = inputValue;
                break;
            case 5:
                preFinal = inputValue*100;
                break;
            case 6:
                preFinal = (inputValue*100)*1000;
                break;
        }
        //convert the centimeter output to the metric unit desired
        switch(unit2){
            case 0:
                finalOutput = preFinal;
                break;
            case 1:
                finalOutput = preFinal/100;
                break;
            case 2:
                finalOutput = (preFinal/100)/1000;
                break;
            case 3:
                finalOutput = preFinal/2.54;
                break;
            case 4:
                finalOutput = preFinal/30.48;
                break;
            case 5:
                finalOutput = preFinal/91.44;
                break;
            case 6:
                finalOutput = preFinal/160934;
                break;
        }
        //output it
        outputLabel.setText("" + finalOutput);
    }
    
    private void stupidUnitSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stupidUnitSelectionActionPerformed
    }//GEN-LAST:event_stupidUnitSelectionActionPerformed

    private void mainInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainInputActionPerformed
        unit1 = stupidUnitSelection.getSelectedIndex();
        unit2 = metricSelection.getSelectedIndex();
        try{
            inputValue = Double.parseDouble(mainInput.getText());
        }
        catch(Exception e){
            throwError("Invalid input. Make sure only numbers are being inputted.");
        }
        refresh();
    }//GEN-LAST:event_mainInputActionPerformed
    
    static public void main(String arguments[]){
        //set up frame/window and launch it
        Main main = new Main();
        JFrame frame = new JFrame();
        frame.setSize(320, 120);
        frame.setContentPane(main);
        frame.setResizable(false);
        frame.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField mainInput;
    private javax.swing.JComboBox metricSelection;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JComboBox stupidUnitSelection;
    private javax.swing.JLabel toLabel;
    // End of variables declaration//GEN-END:variables
}
